"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _standardError = _interopRequireDefault(require("standard-error"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Special class to describe the HTTP response that should be sent back.  Gateway
// searches the message string of a JS Error Class, so we're bundling all
// statuses in an error package, givng end users the ability to select a response
// overriding the default for a Lambda / Gateway handler.
// The error tag is a target that's easy to hit with Gateway's regex hook on error reponses.  That allows it to dispatch the correct status code.
var create, responses;

create = function (name, tag, code) {
  var errorConstructor;

  errorConstructor = function (message) {
    return _standardError.default.call(this, message, {
      tag,
      code
    });
  };

  errorConstructor.prototype = Object.create(_standardError.default.prototype, {
    constructor: {
      value: errorConstructor,
      configurable: true,
      writable: true
    }
  });
  errorConstructor.prototype.name = name;
  return errorConstructor;
};

responses = {
  Continue: create("Continue", "continue", 100),
  SwitchingProtocols: create("SwitchingProtocols", "switching protocols", 101),
  Processing: create("Processing", "processing", 102),
  OK: create("OK", "ok", 200),
  Created: create("Created", "created", 201),
  Accepted: create("Accepted", "accepted", 202),
  NonAuthoritativeInformation: create("NonAuthoritativeInformation", "non-authoritative information", 203),
  NoContent: create("NoContent", "no content", 204),
  ResetContent: create("ResetContent", "reset content", 205),
  PartialContent: create("PartialContent", "partial content", 206),
  MultiStatus: create("MultiStatus", "multi-status", 207),
  AlreadyReported: create("AlreadyReported", "already reported", 208),
  IMUsed: create("IMUsed", "IM used", 226),
  MultipleChoices: create("MultipleChoices", "multiple choices", 300),
  MovedPermanently: create("MovedPermanently", "moved permanently", 301),
  Found: create("Found", "found", 302),
  SeeOther: create("SeeOther", "see other", 303),
  NotModified: create("NotModified", "not modified", 304),
  UseProxy: create("UseProxy", "use proxy", 305),
  TemporaryRedirect: create("TemporaryRedirect", "temporary redirect", 307),
  PermanentRedirect: create("PermanentRedirect", "permanent redirect", 308),
  BadRequest: create("BadRequest", "bad request", 400),
  Unauthorized: create("Unauthorized", "unauthorized", 401),
  PaymentRequired: create("PaymentRequired", "payment required", 402),
  Forbidden: create("Forbidden", "forbidden", 403),
  NotFound: create("NotFound", "not found", 404),
  MethodNotAllowed: create("MethodNotAllowed", "method not allowed", 405),
  MethodNotAcceptable: create("MethodNotAcceptable", "method not acceptable", 406),
  ProxyAuthenticationRequired: create("ProxyAuthenticationRequired", "proxy authentication required", 407),
  RequestTimeout: create("RequestTimeout", "request timeout", 408),
  Conflict: create("Conflict", "conflict", 409),
  Gone: create("Gone", "gone", 410),
  LengthRequired: create("LengthRequired", "length required", 411),
  PreconditionFailed: create("PreconditionFailed", "precondition failed", 412),
  TooLarge: create("TooLarge", "request entity too large", 413),
  URITooLong: create("URITooLong", "URI too long", 414),
  UnsupportedMediaType: create("UnsupportedMediaType", "unsupported media type", 415),
  RangeNotSatisfiable: create("RangeNotSatisfiable", "range not satisfiable", 416),
  ExpectationFailed: create("ExpectationFailed", "expectation failed", 417),
  IMATeapot: create("IMATeapot", "I'm a teapot", 418),
  EnhanceYourCalm: create("EnhanceYourCalm:", "enhance your calm", 420),
  MisdirectedRequest: create("MisdirectedRequest ", "misdirected request ", 421),
  UnprocessableEntity: create("UnprocessableEntity", "unprocessable entity", 422),
  Locked: create("Locked", "locked", 423),
  FailedDependency: create("FailedDependency", "failed dependency", 424),
  UpgradeRequired: create("UpgradeRequired", "upgrade required", 426),
  PreconditionRequired: create("PreconditionRequired", "precondition required", 428),
  TooManyRequests: create("TooManyRequests", "too many requests", 429),
  RequestHeaderFieldsTooLarge: create("RequestHeaderFieldsTooLarge", "request header fields too large", 431),
  UnavailableForLegalReasons: create("UnavailableForLegalReasons", "unavailable for legal reasons", 451),
  Internal: create("Internal", "internal server error", 500),
  NotImplemented: create("NotImplemented", "not implemented", 501),
  BadGateway: create("BadGateway", "bad gateway", 502),
  ServiceUnavailable: create("ServiceUnavailable", "service unavailable", 503),
  GatewayTimeout: create("GatewayTimeout", "gateway time-out", 504),
  HTTPVersionNotSupported: create("HTTPVersionNotSupported", "HTTP version not supported", 505),
  VariantAlsoNegotiates: create("VariantAlsoNegotiates", "variant also negotiates", 506),
  InsufficientStorage: create("InsufficientStorage", "insufficient storage", 507),
  LoopDetected: create("LoopDetected", "loop detected", 508),
  NotExtended: create("Not Extended", "not extended", 510),
  NetworkAuthenticationRequired: create("NetworkAuthenticationRequired", "network authentication required", 511)
};
var _default = responses;
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9wYW5kYS1za3ktaGVscGVycy9zcmMvcmVzcG9uc2VzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBT0E7Ozs7QUFQQTs7Ozs7QUFBQSxJQUFBLE1BQUEsRUFBQSxTQUFBOztBQVNBLE1BQUEsR0FBUyxVQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0FBQ1AsTUFBQSxnQkFBQTs7QUFBQSxFQUFBLGdCQUFBLEdBQW1CLFVBQUEsT0FBQSxFQUFBO1dBQ2pCLHVCQUFBLElBQUEsQ0FBQSxJQUFBLEVBQUEsT0FBQSxFQUFrQztBQUFBLE1BQUEsR0FBQTtBQUFsQyxNQUFBO0FBQWtDLEtBQWxDLEM7QUFEaUIsR0FBbkI7O0FBR0EsRUFBQSxnQkFBZ0IsQ0FBaEIsU0FBQSxHQUE2QixNQUFNLENBQU4sTUFBQSxDQUFjLHVCQUFkLFNBQUEsRUFDM0I7QUFBQyxJQUFBLFdBQUEsRUFBYTtBQUFDLE1BQUEsS0FBQSxFQUFELGdCQUFBO0FBQTBCLE1BQUEsWUFBQSxFQUExQixJQUFBO0FBQThDLE1BQUEsUUFBQSxFQUFVO0FBQXhEO0FBQWQsR0FEMkIsQ0FBN0I7QUFHQSxFQUFBLGdCQUFnQixDQUFDLFNBQWpCLENBQUEsSUFBQSxHQUFrQyxJQUFsQztBQUNBLFNBQU8sZ0JBQVA7QUFSTyxDQUFUOztBQVVBLFNBQUEsR0FDRTtBQUFBLEVBQUEsUUFBQSxFQUFVLE1BQUEsQ0FBQSxVQUFBLEVBQUEsVUFBQSxFQUFWLEdBQVUsQ0FBVjtBQUNBLEVBQUEsa0JBQUEsRUFBb0IsTUFBQSxDQUFBLG9CQUFBLEVBQUEscUJBQUEsRUFEcEIsR0FDb0IsQ0FEcEI7QUFFQSxFQUFBLFVBQUEsRUFBWSxNQUFBLENBQUEsWUFBQSxFQUFBLFlBQUEsRUFGWixHQUVZLENBRlo7QUFJQSxFQUFBLEVBQUEsRUFBSSxNQUFBLENBQUEsSUFBQSxFQUFBLElBQUEsRUFKSixHQUlJLENBSko7QUFLQSxFQUFBLE9BQUEs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QixHQTZEcUIsQ0E3RHJCO0FBOERBLEVBQUEsWUFBQSxFQUFjLE1BQUEsQ0FBQSxjQUFBLEVBQUEsZUFBQSxFQTlEZCxHQThEYyxDQTlEZDtBQStEQSxFQUFBLFdBQUEsRUFBYSxNQUFBLENBQUEsY0FBQSxFQUFBLGNBQUEsRUEvRGIsR0ErRGEsQ0EvRGI7QUFnRUEsRUFBQSw2QkFBQSxFQUErQixNQUFBLENBQUEsK0JBQUEsRUFBQSxpQ0FBQSxFQUFBLEdBQUE7QUFoRS9CLENBREY7ZUFtRWUsUyIsInNvdXJjZXNDb250ZW50IjpbIiMgU3BlY2lhbCBjbGFzcyB0byBkZXNjcmliZSB0aGUgSFRUUCByZXNwb25zZSB0aGF0IHNob3VsZCBiZSBzZW50IGJhY2suICBHYXRld2F5XG4jIHNlYXJjaGVzIHRoZSBtZXNzYWdlIHN0cmluZyBvZiBhIEpTIEVycm9yIENsYXNzLCBzbyB3ZSdyZSBidW5kbGluZyBhbGxcbiMgc3RhdHVzZXMgaW4gYW4gZXJyb3IgcGFja2FnZSwgZ2l2bmcgZW5kIHVzZXJzIHRoZSBhYmlsaXR5IHRvIHNlbGVjdCBhIHJlc3BvbnNlXG4jIG92ZXJyaWRpbmcgdGhlIGRlZmF1bHQgZm9yIGEgTGFtYmRhIC8gR2F0ZXdheSBoYW5kbGVyLlxuXG4jIFRoZSBlcnJvciB0YWcgaXMgYSB0YXJnZXQgdGhhdCdzIGVhc3kgdG8gaGl0IHdpdGggR2F0ZXdheSdzIHJlZ2V4IGhvb2sgb24gZXJyb3IgcmVwb25zZXMuICBUaGF0IGFsbG93cyBpdCB0byBkaXNwYXRjaCB0aGUgY29ycmVjdCBzdGF0dXMgY29kZS5cblxuaW1wb3J0IFN0YW5kYXJkRXJyb3IgZnJvbSBcInN0YW5kYXJkLWVycm9yXCJcblxuY3JlYXRlID0gKG5hbWUsIHRhZywgY29kZSkgLT5cbiAgZXJyb3JDb25zdHJ1Y3RvciA9IChtZXNzYWdlKSAtPlxuICAgIFN0YW5kYXJkRXJyb3IuY2FsbCh0aGlzLCBtZXNzYWdlLCB7dGFnLCBjb2RlfSlcblxuICBlcnJvckNvbnN0cnVjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUgU3RhbmRhcmRFcnJvci5wcm90b3R5cGUsXG4gICAge2NvbnN0cnVjdG9yOiB7dmFsdWU6IGVycm9yQ29uc3RydWN0b3IsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWV9fVxuXG4gIGVycm9yQ29uc3RydWN0b3IucHJvdG90eXBlLm5hbWUgPSBuYW1lXG4gIHJldHVybiBlcnJvckNvbnN0cnVjdG9yXG5cbnJlc3BvbnNlcyA9XG4gIENvbnRpbnVlOiBjcmVhdGUgXCJDb250aW51ZVwiLCBcImNvbnRpbnVlXCIsIDEwMFxuICBTd2l0Y2hpbmdQcm90b2NvbHM6IGNyZWF0ZSBcIlN3aXRjaGluZ1Byb3RvY29sc1wiLCBcInN3aXRjaGluZyBwcm90b2NvbHNcIiwgMTAxXG4gIFByb2Nlc3Npbmc6IGNyZWF0ZSBcIlByb2Nlc3NpbmdcIiwgXCJwcm9jZXNzaW5nXCIsIDEwMlxuXG4gIE9LOiBjcmVhdGUgXCJPS1wiLCBcIm9rXCIsIDIwMFxuICBDcmVhdGVkOiBjcmVhdGUgXCJDcmVhdGVkXCIsIFwiY3JlYXRlZFwiLCAyMDFcbiAgQWNjZXB0ZWQ6IGNyZWF0ZSBcIkFjY2VwdGVkXCIsIFwiYWNjZXB0ZWRcIiwgMjAyXG4gIE5vbkF1dGhvcml0YXRpdmVJbmZvcm1hdGlvbjogY3JlYXRlIFwiTm9uQXV0aG9yaXRhdGl2ZUluZm9ybWF0aW9uXCIsIFwibm9uLWF1dGhvcml0YXRpdmUgaW5mb3JtYXRpb25cIiwgMjAzXG4gIE5vQ29udGVudDogY3JlYXRlIFwiTm9Db250ZW50XCIsIFwibm8gY29udGVudFwiLCAyMDRcbiAgUmVzZXRDb250ZW50OiBjcmVhdGUgXCJSZXNldENvbnRlbnRcIiwgXCJyZXNldCBjb250ZW50XCIsIDIwNVxuICBQYXJ0aWFsQ29udGVudDogY3JlYXRlIFwiUGFydGlhbENvbnRlbnRcIiwgXCJwYXJ0aWFsIGNvbnRlbnRcIiwgMjA2XG4gIE11bHRpU3RhdHVzOiBjcmVhdGUgXCJNdWx0aVN0YXR1c1wiLCBcIm11bHRpLXN0YXR1c1wiLCAyMDdcbiAgQWxyZWFkeVJlcG9ydGVkOiBjcmVhdGUgXCJBbHJlYWR5UmVwb3J0ZWRcIiwgXCJhbHJlYWR5IHJlcG9ydGVkXCIsIDIwOFxuICBJTVVzZWQ6IGNyZWF0ZSBcIklNVXNlZFwiLCBcIklNIHVzZWRcIiwgMjI2XG5cbiAgTXVsdGlwbGVDaG9pY2VzOiBjcmVhdGUgXCJNdWx0aXBsZUNob2ljZXNcIiwgXCJtdWx0aXBsZSBjaG9pY2VzXCIsIDMwMFxuICBNb3ZlZFBlcm1hbmVudGx5OiBjcmVhdGUgXCJNb3ZlZFBlcm1hbmVudGx5XCIsIFwibW92ZWQgcGVybWFuZW50bHlcIiwgMzAxXG4gIEZvdW5kOiBjcmVhdGUgXCJGb3VuZFwiLCBcImZvdW5kXCIsIDMwMlxuICBTZWVPdGhlcjogY3JlYXRlIFwiU2VlT3RoZXJcIiwgXCJzZWUgb3RoZXJcIiwgMzAzXG4gIE5vdE1vZGlmaWVkOiBjcmVhdGUgXCJOb3RNb2RpZmllZFwiLCBcIm5vdCBtb2RpZmllZFwiLCAzMDRcbiAgVXNlUHJveHk6IGNyZWF0ZSBcIlVzZVByb3h5XCIsIFwidXNlIHByb3h5XCIsIDMwNVxuICBUZW1wb3JhcnlSZWRpcmVjdDogY3JlYXRlIFwiVGVtcG9yYXJ5UmVkaXJlY3RcIiwgXCJ0ZW1wb3JhcnkgcmVkaXJlY3RcIiwgMzA3XG4gIFBlcm1hbmVudFJlZGlyZWN0OiBjcmVhdGUgXCJQZXJtYW5lbnRSZWRpcmVjdFwiLCBcInBlcm1hbmVudCByZWRpcmVjdFwiLCAzMDhcblxuICBCYWRSZXF1ZXN0OiBjcmVhdGUgXCJCYWRSZXF1ZXN0XCIsIFwiYmFkIHJlcXVlc3RcIiwgNDAwXG4gIFVuYXV0aG9yaXplZDogY3JlYXRlIFwiVW5hdXRob3JpemVkXCIsIFwidW5hdXRob3JpemVkXCIsIDQwMVxuICBQYXltZW50UmVxdWlyZWQ6IGNyZWF0ZSBcIlBheW1lbnRSZXF1aXJlZFwiLCBcInBheW1lbnQgcmVxdWlyZWRcIiwgNDAyXG4gIEZvcmJpZGRlbjogY3JlYXRlIFwiRm9yYmlkZGVuXCIsIFwiZm9yYmlkZGVuXCIsIDQwM1xuICBOb3RGb3VuZDogY3JlYXRlIFwiTm90Rm91bmRcIiwgXCJub3QgZm91bmRcIiwgNDA0XG4gIE1ldGhvZE5vdEFsbG93ZWQ6IGNyZWF0ZSBcIk1ldGhvZE5vdEFsbG93ZWRcIiwgXCJtZXRob2Qgbm90IGFsbG93ZWRcIiwgNDA1XG4gIE1ldGhvZE5vdEFjY2VwdGFibGU6IGNyZWF0ZSBcIk1ldGhvZE5vdEFjY2VwdGFibGVcIiwgXCJtZXRob2Qgbm90IGFjY2VwdGFibGVcIiwgNDA2XG4gIFByb3h5QXV0aGVudGljYXRpb25SZXF1aXJlZDogY3JlYXRlIFwiUHJveHlBdXRoZW50aWNhdGlvblJlcXVpcmVkXCIsIFwicHJveHkgYXV0aGVudGljYXRpb24gcmVxdWlyZWRcIiwgNDA3XG4gIFJlcXVlc3RUaW1lb3V0OiBjcmVhdGUgXCJSZXF1ZXN0VGltZW91dFwiLCBcInJlcXVlc3QgdGltZW91dFwiLCA0MDhcbiAgQ29uZmxpY3Q6IGNyZWF0ZSBcIkNvbmZsaWN0XCIsIFwiY29uZmxpY3RcIiwgNDA5XG4gIEdvbmU6IGNyZWF0ZSBcIkdvbmVcIiwgXCJnb25lXCIsIDQxMFxuICBMZW5ndGhSZXF1aXJlZDogY3JlYXRlIFwiTGVuZ3RoUmVxdWlyZWRcIiwgXCJsZW5ndGggcmVxdWlyZWRcIiwgNDExXG4gIFByZWNvbmRpdGlvbkZhaWxlZDogY3JlYXRlIFwiUHJlY29uZGl0aW9uRmFpbGVkXCIsIFwicHJlY29uZGl0aW9uIGZhaWxlZFwiLCA0MTJcbiAgVG9vTGFyZ2U6IGNyZWF0ZSBcIlRvb0xhcmdlXCIsIFwicmVxdWVzdCBlbnRpdHkgdG9vIGxhcmdlXCIsIDQxM1xuICBVUklUb29Mb25nOiBjcmVhdGUgXCJVUklUb29Mb25nXCIsIFwiVVJJIHRvbyBsb25nXCIsIDQxNFxuICBVbnN1cHBvcnRlZE1lZGlhVHlwZTogY3JlYXRlIFwiVW5zdXBwb3J0ZWRNZWRpYVR5cGVcIiwgXCJ1bnN1cHBvcnRlZCBtZWRpYSB0eXBlXCIsIDQxNVxuICBSYW5nZU5vdFNhdGlzZmlhYmxlOiBjcmVhdGUgXCJSYW5nZU5vdFNhdGlzZmlhYmxlXCIsIFwicmFuZ2Ugbm90IHNhdGlzZmlhYmxlXCIsIDQxNlxuICBFeHBlY3RhdGlvbkZhaWxlZDogY3JlYXRlIFwiRXhwZWN0YXRpb25GYWlsZWRcIiwgXCJleHBlY3RhdGlvbiBmYWlsZWRcIiwgNDE3XG4gIElNQVRlYXBvdDogY3JlYXRlIFwiSU1BVGVhcG90XCIsIFwiSSdtIGEgdGVhcG90XCIsIDQxOFxuICBFbmhhbmNlWW91ckNhbG06IGNyZWF0ZSBcIkVuaGFuY2VZb3VyQ2FsbTpcIiwgXCJlbmhhbmNlIHlvdXIgY2FsbVwiLCA0MjBcbiAgTWlzZGlyZWN0ZWRSZXF1ZXN0OiBjcmVhdGUgXCJNaXNkaXJlY3RlZFJlcXVlc3QgXCIsIFwibWlzZGlyZWN0ZWQgcmVxdWVzdCBcIiwgNDIxXG4gIFVucHJvY2Vzc2FibGVFbnRpdHk6IGNyZWF0ZSBcIlVucHJvY2Vzc2FibGVFbnRpdHlcIiwgXCJ1bnByb2Nlc3NhYmxlIGVudGl0eVwiLCA0MjJcbiAgTG9ja2VkOiBjcmVhdGUgXCJMb2NrZWRcIiwgXCJsb2NrZWRcIiwgNDIzXG4gIEZhaWxlZERlcGVuZGVuY3k6IGNyZWF0ZSBcIkZhaWxlZERlcGVuZGVuY3lcIiwgXCJmYWlsZWQgZGVwZW5kZW5jeVwiLCA0MjRcbiAgVXBncmFkZVJlcXVpcmVkOiBjcmVhdGUgXCJVcGdyYWRlUmVxdWlyZWRcIiwgXCJ1cGdyYWRlIHJlcXVpcmVkXCIsIDQyNlxuICBQcmVjb25kaXRpb25SZXF1aXJlZDogY3JlYXRlIFwiUHJlY29uZGl0aW9uUmVxdWlyZWRcIiwgXCJwcmVjb25kaXRpb24gcmVxdWlyZWRcIiwgNDI4XG4gIFRvb01hbnlSZXF1ZXN0czogY3JlYXRlIFwiVG9vTWFueVJlcXVlc3RzXCIsIFwidG9vIG1hbnkgcmVxdWVzdHNcIiwgNDI5XG4gIFJlcXVlc3RIZWFkZXJGaWVsZHNUb29MYXJnZTogY3JlYXRlIFwiUmVxdWVzdEhlYWRlckZpZWxkc1Rvb0xhcmdlXCIsIFwicmVxdWVzdCBoZWFkZXIgZmllbGRzIHRvbyBsYXJnZVwiLCA0MzFcbiAgVW5hdmFpbGFibGVGb3JMZWdhbFJlYXNvbnM6IGNyZWF0ZSBcIlVuYXZhaWxhYmxlRm9yTGVnYWxSZWFzb25zXCIsIFwidW5hdmFpbGFibGUgZm9yIGxlZ2FsIHJlYXNvbnNcIiwgNDUxXG5cbiAgSW50ZXJuYWw6IGNyZWF0ZSBcIkludGVybmFsXCIsIFwiaW50ZXJuYWwgc2VydmVyIGVycm9yXCIsIDUwMFxuICBOb3RJbXBsZW1lbnRlZDogY3JlYXRlIFwiTm90SW1wbGVtZW50ZWRcIiwgXCJub3QgaW1wbGVtZW50ZWRcIiwgNTAxXG4gIEJhZEdhdGV3YXk6IGNyZWF0ZSBcIkJhZEdhdGV3YXlcIiwgXCJiYWQgZ2F0ZXdheVwiLCA1MDJcbiAgU2VydmljZVVuYXZhaWxhYmxlOiBjcmVhdGUgXCJTZXJ2aWNlVW5hdmFpbGFibGVcIiwgXCJzZXJ2aWNlIHVuYXZhaWxhYmxlXCIsIDUwM1xuICBHYXRld2F5VGltZW91dDogY3JlYXRlIFwiR2F0ZXdheVRpbWVvdXRcIiwgXCJnYXRld2F5IHRpbWUtb3V0XCIsIDUwNFxuICBIVFRQVmVyc2lvbk5vdFN1cHBvcnRlZDogY3JlYXRlIFwiSFRUUFZlcnNpb25Ob3RTdXBwb3J0ZWRcIiwgXCJIVFRQIHZlcnNpb24gbm90IHN1cHBvcnRlZFwiLCA1MDVcbiAgVmFyaWFudEFsc29OZWdvdGlhdGVzOiBjcmVhdGUgXCJWYXJpYW50QWxzb05lZ290aWF0ZXNcIiwgXCJ2YXJpYW50IGFsc28gbmVnb3RpYXRlc1wiLCA1MDZcbiAgSW5zdWZmaWNpZW50U3RvcmFnZTogY3JlYXRlIFwiSW5zdWZmaWNpZW50U3RvcmFnZVwiLCBcImluc3VmZmljaWVudCBzdG9yYWdlXCIsIDUwN1xuICBMb29wRGV0ZWN0ZWQ6IGNyZWF0ZSBcIkxvb3BEZXRlY3RlZFwiLCBcImxvb3AgZGV0ZWN0ZWRcIiwgNTA4XG4gIE5vdEV4dGVuZGVkOiBjcmVhdGUgXCJOb3QgRXh0ZW5kZWRcIiwgXCJub3QgZXh0ZW5kZWRcIiwgNTEwXG4gIE5ldHdvcmtBdXRoZW50aWNhdGlvblJlcXVpcmVkOiBjcmVhdGUgXCJOZXR3b3JrQXV0aGVudGljYXRpb25SZXF1aXJlZFwiLCBcIm5ldHdvcmsgYXV0aGVudGljYXRpb24gcmVxdWlyZWRcIiwgNTExXG5cbmV4cG9ydCBkZWZhdWx0IHJlc3BvbnNlc1xuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/david/repos/panda-sky-helpers/src/responses.coffee